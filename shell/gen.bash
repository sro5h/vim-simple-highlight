#! /bin/bash
#
# gen.bash
#
# Author:
#     Paul Meffle
#
# Summary:
#     Generate a set of vim commands to highlight a list of tags generated by:
#     [exuberant ctags](ctags.sourceforge.net).
#
# License:
#     Zlib license

# Global variables
tagsFile="tags"
tagsList=""
typeList=""

showUsage() {
        echo "Usage:"
        echo "    gen.bash <options>"
        echo ""
        echo "    -f [file=tags]: The tags file to use"
}

# Parse arguments
while getopts "hf:d:" opt; do
        case "${opt}" in
                h)
                        showUsage
                        exit 0
                        ;;
                f)
                        tagsFile="${OPTARG}"
                        ;;
                :|?)
                        exit 1
                        ;;
        esac
done

# Check whether the specified tags file exists. If it exists sort it by the
# fourth column (the tag kind) and store it in a variable.
if [ -f "${tagsFile}" ]; then
        tagsList="$(sort -k4 -t\	 "${tagsFile}")"
else
        exit 0;
fi

# The variables holding the highlight group for each `kind`.
hgC=Identifier
hgF=Function
hgS=Identifier
hgT=Identifier

# Converts the tags file into vim syntax commands. Lines starting with `!`
# (comment) or `operator` (c++ operator) are ignored. For each language
# specific `kind` (`ctags --list-kinds`) there has to be a shell variable that
# holds the highlight group that should be used.
# e.g.:
#   kind c -> ${hgC}
# The order in which the syntax commands get printed is defined in the `END`
# block. This is important to avoid e.g. a constructor overriding the class
# highlight.
awkProgram='/^!/ { next } /^operator/ { next }
{
        if ($4 == "c") {
                cList = cList sprintf("syntax keyword '"${hgC}"' %s\n", $1);
        } else if ($4 == "f") {
                fList = fList sprintf("syntax keyword '"${hgF}"' %s\n", $1);
        } else if ($4 == "s") {
                sList = sList sprintf("syntax keyword '"${hgS}"' %s\n", $1);
        } else if ($4 == "t") {
                tList = tList sprintf("syntax keyword '"${hgT}"' %s\n", $1);
        }
}
END {
        printf("%s%s%s%s", fList, tList, sList, cList);
}'

# Runs the `${awkProgram}` to convert the tags file into vim syntax commands.
# e.g.:
#   syntax keyword Identifier ExampleClass
typeList="$(printf "%s" "${tagsList}" | awk -F "\t" "${awkProgram}")"

# Remove duplicate lines.
typeList="$(printf "%s" "${typeList}" | awk '!seen[$0]++')"

# Output the vim syntax commands.
printf "%s" "${typeList}"
